<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Hi, this is ExhYZ.</title>
        <link>https://www.nwyz.eu.org/blog/posts/</link>
        <description>Recent content in Posts on Hi, this is ExhYZ.</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sat, 22 Apr 2023 13:05:46 +0800</lastBuildDate>
        <atom:link href="https://www.nwyz.eu.org/blog/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Introducing Ethonwork Bailing</title>
            <link>https://www.nwyz.eu.org/blog/posts/3-introducing-bailing/</link>
            <pubDate>Sat, 22 Apr 2023 13:05:46 +0800</pubDate>
            
            <guid>https://www.nwyz.eu.org/blog/posts/3-introducing-bailing/</guid>
            <description>TL;DR After the progressive development of AI all over the world in March, we reached a whole new level of AI language models. We created Bailing (Lark), which is a series of models that everyone can run locally on low-end personal PCs. Including English and Chinese support.
What&amp;rsquo;s this? A few months ago, Facebook (Meta) released their open-source language model LLaMA. It&amp;rsquo;s not the same powerful as OpenAI&amp;rsquo;s Chat-GPT, but open source means we can do lots of improvements based on the official model.</description>
            <content type="html"><![CDATA[<h2 id="tldr">TL;DR</h2>
<p>After the progressive development of AI all over the world in March, we reached a whole new level of AI language models. We created Bailing (Lark), which is a series of models that everyone can run locally on low-end personal PCs. Including English and Chinese support.</p>
<h2 id="whats-this">What&rsquo;s this?</h2>
<p>A few months ago, Facebook (Meta) released their open-source language model LLaMA. It&rsquo;s not the same powerful as OpenAI&rsquo;s Chat-GPT, but open source means we can do lots of improvements based on the official model. Dozen of days later, Team Stanford released their improved version of LLaMA, named Stanford Alpaca, which showed its strong potential. Soon, lots of language models based on LLaMA came out such as Vicuna, Koala and StableLM. All of these models made a huge progress on the AI roadmap. Ethonwork is trying to find a more affordable and efficient way for everyone to make it possible on personal PCs. So&hellip;</p>
<h2 id="introducing-ethonwork-bailing">Introducing Ethonwork Bailing</h2>
<p>In the past few weeks, we tried to improve different base LLaMA models in different ways. Up to now, Bailing has been iterated 4 times. We found that the 4th generation of our model can work in a more accurate and progressive way. Then, we tried to train the model with the same dataset of GPT-4 and produced the first and the main branch of Bailing 4: Bailing 4a.</p>
<p>The Bailing 4a models are our mainstream models. Thanks to the GPT-4 training dataset, Bailing 4a model can answer your questions fluently and smoothly with less incorruptions. It is now friendly and polite to users with out tries on the prompt. Changing the prompt will also influence the performance of the model.</p>
<h2 id="keep-developing-for-possibilities">Keep Developing For Possibilities</h2>
<p>Even if 4a models performs very well, we are still not satisfied with it. At the same time, we are also looking for a more diversified development route to provide a relaxing daily-style conversation experience.</p>
<p>In this way, we tried Koala and Vicuna, these two models performs very well on assistant-like conversations. Then, we fetched 6.5 billion of pieces of daily conversation data through the entire Internet, which contains about 840 billion words (tokens). After the training, our model can work in a more relaxed state. The answers are more creative, imaginative and interesting. And this, is our next branch, Bailing 4b.</p>
<h2 id="try-with-courage-and-create-more">Try with Courage, And Create More</h2>
<p>Our 4a and 4b models works well in two styles, but both of them are trained only in English. This is the limitation of the original model of LLaMA. It is trained with 40K+ words&rsquo; dictionary entirely in English. This leads to the lack of abilities in other languages, especially the understanding and organizing ability in CJK (Chinese/Japanese/Korean) languages.</p>
<p>To try to solve this, we fetched more than 32 billion pieces of Chinese language data and selected only 90 million pieces of them. This is because most of these data is inconsistent with Chinese grammar, incorrect and informal or impolite. I felt the Chinese language system is very complicated, even if I am a Chinese whose mother tongue is Chinese, too. We naturally abandon some necessary or unnecessary grammatical details in daily communication to make the expression more efficient and clear in Chinese. But this is a hard work for an artificial intelligence to understand. Their answers are usually weird and generated in Latin order.</p>
<p>Our efforts in the third branch are a reproduction of our recent Chinese language experiments, codename CANGJIE. The large amount of training allows the model to properly generate some basic or advanced Chinese answers politely. And this, is our Bailing 4c.</p>
<h2 id="system-requirements">System Requirements</h2>
<p>You can run Bailing even on a low-end computer with Core 2 Duo. The model only requires 4GB/2GB of unused RAM space and 4GB/3GB of unused disk space to run properly. This means everyone can run this AI chatbot on personal PC or Mac. Thanks to C++, it works on almost all of the operating systems and CPU architectures. All for you to do is download the model files and run the binary file, then enjoy it. We will also provide the source code, so you can compile for your own platform that compatible with C++.</p>
<h2 id="behind-the-result">Behind The Result</h2>
<p>The development of Bailing is inseparable from the support of many open-source projects. Here, we give special thanks to the following projects:</p>
<ul>
<li>
<p>llama.cpp: It is a inference of LLaMA model in pure C/C++. We can quantize our model to reduce the size and significantly reduce the use of system sources. Also, we used this as our user interface.</p>
</li>
<li>
<p>llama: This is the base model of Bailing, it also helped Bailing to work in a user-friendly way.</p>
</li>
<li>
<p>stanford_alpaca: This project helped us a lot to fine-tuning the model.</p>
</li>
</ul>
<p>At the same time, other projects also helped us a lot to create Bailing. We won&rsquo;t repeat them here because of the length of the post. We will make a list later on our website.  We&rsquo;re very sorry for this.</p>
<h2 id="what-about-others">What About Others</h2>
<p>You can view other information and tech details on our official website, and the project instruction page <a href="https://www.nwyz.eu.org/beta/PageStorage/Projects/Bailing/bailing.html">here</a>.</p>
]]></content>
        </item>
        
        <item>
            <title>Markdown Crash Course For Beginners and FAQs</title>
            <link>https://www.nwyz.eu.org/blog/posts/001-002-markdown-crashcourse/</link>
            <pubDate>Fri, 06 Jan 2023 08:28:01 +0800</pubDate>
            
            <guid>https://www.nwyz.eu.org/blog/posts/001-002-markdown-crashcourse/</guid>
            <description>Before we start Hi! I&amp;rsquo;m back, today we are going to use Markdown, which is a powerful lightweight markup language for creating beautiful formatted text using only a text editor.
Part 1: Install a better text editor There are many software compatible with Markdown syntax and some of them have their own features. Out of all these, I suggest to use:
Visual Studio Code (Recommended), which is a powerful editor by Microsoft.</description>
            <content type="html"><![CDATA[<h2 id="before-we-start">Before we start</h2>
<p>Hi! I&rsquo;m back, today we are going to use Markdown, which is a powerful lightweight markup language for creating beautiful formatted text using only a text editor.</p>
<h2 id="part-1-install-a-better-text-editor">Part 1: Install a better text editor</h2>
<p>There are many software compatible with Markdown syntax and some of them have their own features. Out of all these, I suggest to use:</p>
<ul>
<li><a href="https://code.visualstudio.com/"><strong>Visual Studio Code</strong></a> <em>(Recommended)</em>, which is a powerful editor by Microsoft. It has friendly user interface, quick release/git experience and easy Markdown extension experience. Actually, its compatibility is extremely good, it works on <strong>Windows 8,10,11 x86/x64/arm64</strong>, almost every <strong>Linux x64/arm32/arm64</strong> distros, <strong>macOS 10.11+ Intel/Apple</strong> and even a <a href="https://vscode.dev/"><strong>Web Version</strong></a>. The best for beginners.</li>
<li><a href="https://github.com/marktext/marktext"><strong>MarkText</strong></a>, a simple and elegant open-source markdown editor that focused on speed and usability. Provides a familiar user interface and extreme editing/reading experience. If you want a quick, open-source editor, just try MarkText. It works on <strong>Windows x86/x64</strong>, <strong>Linux x64</strong> and <strong>macOS x64</strong>.</li>
<li><a href="https://notepad-plus-plus.org/downloads/"><strong>Notepad ++</strong></a>, which is another excellent text editor for Markdown with plug-ins. It works well on <strong>Windows</strong> platform.</li>
<li><a href="https://typora.io/"><strong>Typora</strong></a> is a minimal Markdown editor/reader. It has seamless live preview which meaning what you see is what you mean. Themes looks quite good in Typora but it&rsquo;s no longer free right now. Works well on <strong>Windows x86/x64/arm64</strong>, <strong>Linux x64/arm64</strong> and <strong>macOS with Intel chips</strong>.</li>
</ul>
<h2 id="part-2-creating-basic-formats">Part 2: Creating basic formats</h2>
<p>For the tutorial, I will use Visual Studio Code for the demo and you can pick your favorite.</p>
<h4 id="1-installing-extensions">1. Installing extensions</h4>
<p>(1) Open Visual Studio Code, and click the <strong>&ldquo;Extension&rdquo;</strong> tab on the left (or you can use <code>Ctrl+Shift+X</code>)<br>
(2) Search <strong>&ldquo;Markdown All in One&rdquo;</strong> and click <strong>&ldquo;Install&rdquo;</strong><br>
(3) Search <strong>&ldquo;Auto-Open Markdown Preview&rdquo;</strong> and click <strong>&ldquo;Install&rdquo;</strong><br>
(4) Now reopen Visual Studio Code.</p>
<h4 id="2-create-a-markdown-file">2. Create a Markdown file</h4>
<p>(1) After reopened Visual Studio Code, click <strong>&ldquo;File&rdquo;</strong> on the top left corner of the window and then click <strong>&ldquo;New File&hellip;&rdquo;</strong>.<br>
(2) Type <strong>&quot;<em>xxx</em>.md&quot;</strong> and hit <strong>ENTER</strong>, then choose a directory and now the file will open. *<strong>If your extension installed correctly, you can see a Preview window on the right hand side.</strong></p>
<h2 id="part-3-commonly-used-markdown-syntax">Part 3: Commonly used Markdown syntax</h2>
<p>The easy syntax is the core of Markdown, it&rsquo;s not difficult with only some punctuations.</p>
<h4 id="1-headings">1. Headings</h4>
<p>Headings in markdown is <strong>just with <code>#</code></strong>. Write in your file like this:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-Markdown" data-lang="Markdown"><span style="display:flex;"><span># This is a level 1 heading
</span></span><span style="display:flex;"><span><span style="color:#75715e">## This is a level 2 heading
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">### This is a level 3 heading
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">#### This is a level 4 heading
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">##### This is a level 5 heading
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">###### This is a level 6 heading
</span></span></span></code></pre></div><p><a href="https://www.nwyz.eu.org/files/mddemo1.html">And it looks like this (Click to view)</a></p>
<table>
<thead>
<tr>
<th>✅ Right</th>
<th>❌ Wrong</th>
</tr>
</thead>
<tbody>
<tr>
<td># Heading with a space</td>
<td>#Heading without space</td>
</tr>
<tr>
<td>The first line before a blank line<!-- raw HTML omitted --><!-- raw HTML omitted --># Put heading here<!-- raw HTML omitted --><!-- raw HTML omitted -->The third line after another blank line</td>
<td>The first line without a blank line<!-- raw HTML omitted --># DON&rsquo;T DO THIS<!-- raw HTML omitted -->The third line without a blank line</td>
</tr>
</tbody>
</table>
<h4 id="2-newline">2. Newline</h4>
<p>To create a new line, just type 2 spaces at the end of the first line and then type the second line.<br>
Type in your file like this:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-Markdown" data-lang="Markdown"><span style="display:flex;"><span>THIS IS THE FIRST LINE     &lt;<span style="color:#f92672">-there</span> <span style="color:#a6e22e">are</span> <span style="color:#a6e22e">2</span> <span style="color:#a6e22e">spaces</span> <span style="color:#a6e22e">here</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">THIS</span> <span style="color:#a6e22e">IS</span> <span style="color:#a6e22e">THE</span> <span style="color:#a6e22e">SECOND</span> <span style="color:#a6e22e">LINE</span>
</span></span></code></pre></div><table>
<thead>
<tr>
<th>✅ Right</th>
<th>❌ Wrong</th>
</tr>
</thead>
<tbody>
<tr>
<td>The first line  <!-- raw HTML omitted -->The second line</td>
<td>The first line  The second line</td>
</tr>
</tbody>
</table>
<hr>
<p><strong>TO BE CONTINUED</strong></p>
]]></content>
        </item>
        
        <item>
            <title>Create Your Own Website For Free &amp; Custom Domain</title>
            <link>https://www.nwyz.eu.org/blog/posts/001-001-create-website/</link>
            <pubDate>Thu, 05 Jan 2023 16:42:21 +0800</pubDate>
            
            <guid>https://www.nwyz.eu.org/blog/posts/001-001-create-website/</guid>
            <description>Before we start You can create your own website for free in less than 30 minutes with this tutorial without coding.
Part 1: Create a Github Pages repository We will use a Github repository to store our website files, so we should create a Github account (if not yet) and create a repo. It&amp;rsquo;s easy, just do the following steps:
0. Create a Github account (if you don&amp;rsquo;t have one yet) We can go to Join Github (Click to jump) and register an account.</description>
            <content type="html"><![CDATA[<hr>
<h2 id="before-we-start">Before we start</h2>
<p>You can create your own website for free in less than 30 minutes with this tutorial without coding.</p>
<h2 id="part-1-create-a-github-pages-repository">Part 1: Create a Github Pages repository</h2>
<p>We will use a Github repository to store our website files, so we should create a Github account (if not yet) and create a repo. It&rsquo;s easy, just do the following steps:</p>
<h4 id="0-create-a-github-account-if-you-dont-have-one-yet">0. Create a Github account (if you don&rsquo;t have one yet)</h4>
<p>We can go to <strong><a href="https://github.com/join" title="Click to jump">Join Github</a></strong> (Click to jump) and register an account. I recommended using only <strong>lowercase letters or numbers for the username.</strong> Then, just choose the <strong>free subscription</strong> and you will receive a verify mail soon in your inbox, click <strong>VERIFY</strong> and now you created your own Github account.</p>
<h4 id="1-create-a-repository-for-your-site">1. Create a repository for your site</h4>
<p>Go to <strong><a href="https://github.com/" title="Click to jump">Github</a></strong> and click the <strong>&quot;+&quot;</strong> on the top-right corner of the github homepage then click <strong>&ldquo;New repository&rdquo;</strong></p>
<p><a href="https://i.postimg.cc/L4Z4RcbJ/create-repo.png"><img src="https://i.postimg.cc/L4Z4RcbJ/create-repo.png" alt="Click on &amp;ldquo;New repository&amp;rdquo;" title="Create Repo"></a></p>
<p>Then enter your repository name like <strong>username.github.io</strong>, use your username to replace the &ldquo;username&rdquo;, this will be the domain name of your site if you don&rsquo;t wanna to change the domain name later in Part 4. For example, my username is <em>nwkyz</em> so I entered <em>nwkyz.github.io</em> as my repository name.</p>
<p><a href="https://i.postimg.cc/sgpx9krB/username.png"><img src="https://i.postimg.cc/sgpx9krB/username.png" alt="Enter your repository name" title="repo name"></a></p>
<p>At last, set your repository as <strong>Public</strong> and leave other settings default.</p>
<p><a href="https://i.postimg.cc/WzLbk8Hm/setaspublic.png"><img src="https://i.postimg.cc/WzLbk8Hm/setaspublic.png" alt="Set as Public" title="Set as Public repository"></a></p>
<p><strong>Click &ldquo;Create Repository&rdquo;</strong></p>
<h4 id="2-create-a-commit">2. Create a commit</h4>
<p>After we created the repository, Github will automatically jump to the Quick Setup page, just click on the blue <strong>&ldquo;README&rdquo;</strong> below the SSH link.</p>
<p><a href="https://i.postimg.cc/d0yZh5s6/add-README.png"><img src="https://i.postimg.cc/d0yZh5s6/add-README.png" alt="Click on &amp;ldquo;README&amp;rdquo;" title="Click on README"></a></p>
<p>Just type something in the README.md file and click <strong>&ldquo;Commit new file&rdquo;</strong> button on the bottom of the page.</p>
<p><a href="https://i.postimg.cc/mrnx5SCv/typesomething.png"><img src="https://i.postimg.cc/mrnx5SCv/typesomething.png" alt="Just type something in it" title="Type something"></a></p>
<p><a href="https://i.postimg.cc/MTXPfc3q/commitnewfile.png"><img src="https://i.postimg.cc/MTXPfc3q/commitnewfile.png" alt="Click Commit new file" title="Click Commit"></a></p>
<h4 id="3-check">3. Check</h4>
<p>Now visit <a href="https://username.github.io/">https://username.github.io/</a> (<strong>replace &ldquo;username&rdquo; as your own Github username</strong>) and you can see the content of the README.md we&rsquo;ve already created a few seconds ago</p>
<p><em>PS: If there&rsquo;s any problem, please create a comment below this blog post</em></p>
<h2 id="part-2-create-your-site-content">Part 2: Create your site content</h2>
<p>We just finished creating Github repository, but our site needs some content. So this part will tell you how to create website contents easily without coding.</p>
<h4 id="software">Software</h4>
<p>There are many frameworks to create site contents, in this part, I&rsquo;ll introduce how to use Hugo and PageFabric to create a beautiful site, both of them are free software.</p>
<h4 id="comparison">Comparison</h4>
<p>PageFabric - Create beautiful websites without coding <a href="https://pagefabric-app.com/">(Official Site)</a> :</p>
<ul>
<li>
<ul>
<li>Friendly interface for beginners</li>
<li>Easily install and configure with Microsoft Store</li>
<li>Create site with drag and drop quickly</li>
<li>Looks really nice</li>
<li>Simple SEO and publication settings</li>
<li>Fluent/Fabric/Material Design</li>
<li><strong>Better for building static sites</strong></li>
</ul>
</li>
<li>
<ul>
<li>Client only works on Windows 10/11</li>
<li>Less customization</li>
<li>Page layouts have some limitations</li>
</ul>
</li>
</ul>
<p>Hugo - The world’s fastest framework for building websites <a href="https://gohugo.io/">(Official Site)</a> :</p>
<ul>
<li>
<ul>
<li>Lightweight, flexible and open-source</li>
<li>Works on almost every OS, or you can also compile by yourself</li>
<li>Operating in terminal*</li>
<li>Thousands of themes</li>
<li>Support Markdown</li>
<li><strong>Better for building blogs</strong></li>
</ul>
</li>
<li>
<ul>
<li>No graphics interface</li>
<li>Some limitations from Markdown</li>
<li>Needs some coding**</li>
</ul>
</li>
</ul>
<p>For more details, I will make another tutorial post later.</p>
<h2 id="part-3-release-your-website">Part 3: Release your website</h2>
<p>We&rsquo;ve just created our first webpage and now we should push our site files from local to your Github repository with <strong>GitHub Desktop</strong> application.</p>
<h4 id="1-install-github-desktop">1. Install Github Desktop</h4>
<p><strong>On Windows or macOS:</strong> You can install this easily. Visit the site <a href="https://desktop.github.com/">https://desktop.github.com/</a> and click <strong>Download for Windows (64-bit)</strong> or <strong>Download for macOS</strong> then you can easily install with the installer.</p>
<p><strong>On Linux:</strong> Github doesn&rsquo;t have an official application for Linux. But thanks to shiftkey/desktop, which is working to support Linux platform, we can use Github Desktop based on Electron on Linux. Visit the repo <a href="https://github.com/shiftkey/desktop/releases/">(Click to visit)</a> and <strong>download the .deb/.rpm/.Appimage file</strong> of the latest release. <em>If you&rsquo;re using debian/ubuntu based distros that uses dpkg, you should download the .deb one; if you&rsquo;re using RedHat based distros, you should download the .rpm one, or you can <strong>choose the .Appimage one if you aren&rsquo;t sure</strong></em>.</p>
<ul>
<li>
<p>If you chosen the .Appimage one: Just double click on the file and Github Desktop will launch. If it doesn&rsquo;t work, right click on the file and click Properties, then enable &ldquo;Allow this file to run as a program&rdquo; in the Permissions tab, and double click on the file again.</p>
</li>
<li>
<p>If you chosen the .deb/.rpm one: You can open a terminal in your download directory, and type the commands below the hit Enter.</p>
<p><code>sudo dpkg -i ./*.deb</code>  for the .deb one or <code>sudo rpm -ivh ./*.rpm</code> for the .rpm one.</p>
</li>
</ul>
<h4 id="2-set-up-your-repository-clone">2. Set up your repository clone</h4>
<p>After installing Github Desktop, we should clone your repository to your computer so you can edit your files and commit changes locally and quickly.</p>
<ul>
<li>Launch Github Desktop</li>
<li>Log into your Github account</li>
<li>Choose your <em>username.github.io</em> repository then pick a local directory to store your repository files</li>
</ul>
<p>After the 3 steps, you can see a interface just like this and a <em>username.github.io</em> folder as your local repository directory:</p>
<p><a href="https://i.postimg.cc/GpzB3M5Z/ghdesktop.png"><img src="https://i.postimg.cc/GpzB3M5Z/ghdesktop.png" alt="Github Desktop application homepage" title="Github Desktop"></a></p>
<h4 id="3-copy-your-website-files-into-the-repository-directory">3. Copy your website files into the repository directory</h4>
<p>Copy your website files we built in Part 2 into your repository directory. If you operated properly, you can see many files including an <strong>index.html</strong> in your repository directory (named like <em>username.github.io</em>)</p>
<h4 id="4-commit-changes-and-push-origin">4. Commit changes and push origin</h4>
<p>Then back to Github Desktop, some changes will appear on the left in a few seconds, type something in the <strong>&ldquo;Summary(required)&rdquo;</strong> textbox then click <strong>Commit to main</strong></p>
<h2 id="part-4-customize-domain-name">Part 4: Customize Domain Name</h2>
<p>If you want to change the domain name, just follow the Part 4.</p>
<p>You can change the domain name to the following examples for free :</p>
<ul>
<li><code>XXX.eu.org</code>  with eu.org&rsquo;s service (not recommended for beginners)</li>
<li><code>XXX.tk</code> with Freenom&rsquo;s service</li>
<li><code>XXX.ml</code> with Freenom&rsquo;s service</li>
<li><code>XXX.ga</code> with Freenom&rsquo;s service</li>
<li><code>XXX.cf</code> with Freenom&rsquo;s service</li>
<li><code>XXX.gq</code> with Freenom&rsquo;s service</li>
</ul>
<h4 id="1-get-a-domain-name">1. Get a domain name</h4>
<p>Visit the site <a href="https://www.freenom.com">www.freenom.com</a> and type the prefix you want in the &ldquo;Find a new FREE domain&rdquo; and then click &ldquo;Check Availability&rdquo;. If it&rsquo;s available, just click the blue &ldquo;Get it now&rdquo; and then the green &ldquo;Checkout&rdquo;. In the &ldquo;Period&rdquo; column, you can change the expiration date up to 12 Months for free, <em>(you can do this again after 12 months, I will post another blog later for a permanent service)</em>. Click &ldquo;Continue&rdquo; then enter your email and click &ldquo;Verify My Email Address&rdquo;. You&rsquo;ll find a verify email in your inbox soon. If there&rsquo;s not, check if it&rsquo;s in the junk list or if the email address you typed is invalid. If you got the email, just follow the guide and verify it.</p>
<p>Then, back to the Freenom&rsquo;s checkout page and buy the domain for $0.00USD. <strong>There aren&rsquo;t any requirements for a credit card or payments. If there is, check if the domain you chosen is free.</strong></p>
<h4 id="2-configure-the-dns-settings">2. Configure the DNS settings</h4>
<p>Go to <a href="https://my.freenom.com/clientarea.php?action=domains">&ldquo;My Domains&rdquo;</a> on Freemon, then click &ldquo;Manage Domain&rdquo; on the right of your domain name. Click <strong>&ldquo;Management Tools&rdquo; &gt; &ldquo;Nameservers&rdquo;</strong>, make sure it points to <strong>&ldquo;Use default nameservers (Freenom Nameservers)&rdquo;</strong> and then click <strong>&ldquo;Manage Freenom DNS&rdquo;</strong>.</p>
<p>Now:</p>
<ul>
<li>Type <code>www</code> in &ldquo;Name&rdquo;</li>
<li>Change &ldquo;Type&rdquo; to <code>CNAME</code></li>
<li>Set &ldquo;TTL&rdquo; to <code>600</code></li>
<li>Set &ldquo;Target&rdquo; to your github domain name (looks like xxxx.github.io, it&rsquo;s also your site repository name)</li>
<li>Click &ldquo;Save Changes&rdquo;</li>
</ul>
<h4 id="3-apply-changes-to-github-repository">3. Apply changes to Github repository</h4>
<p>Now, we set up our own domain name and DNS settings. We should also create a <code>CNAME</code> file in the root directory of your repository so that Github can send its domain name to yours.</p>
<p>Go to your repository page, click &ldquo;Add file&rdquo; then &ldquo;Create a new file&rdquo;.</p>
<p><a href="https://i.postimg.cc/x1TbQ5sR/addcname.png"><img src="https://i.postimg.cc/x1TbQ5sR/addcname.png" alt="Add CNAME"></a></p>
<p>Type <code>CNAME</code> in &ldquo;Name your file&rdquo; and then type your own domain name below in the file</p>
<p><a href="https://i.postimg.cc/c1FSjcnZ/cname.png"><img src="https://i.postimg.cc/c1FSjcnZ/cname.png" alt="Edit CNAME"></a></p>
<p>Then, scroll down and click &ldquo;Commit new file&rdquo;</p>
<h4 id="4-all-done">4. All Done!</h4>
<p>After a few minutes, you can visit your own site with both <code>xxx.github.io</code> and <code>www + your own domain name</code> .</p>
<hr>
<h2 id="we-did-this">We did this!</h2>
<p>The tutorial is finished here, you can now enjoy your own website if everything is fine. Good luck!</p>
<p>If you have and problems, just comment below。</p>
]]></content>
        </item>
        
    </channel>
</rss>
